Metadata-Version: 2.1
Name: bioneuralnet
Version: 0.1.0
Summary: A framework designed to analyze biological data through a series of computational steps. Capable of taking a network to a lower dimensional space. Opening the door for further analysis.
Home-page: https://github.com/UCD-BDLab/BioNeuralNet
Author: Vicente Ramos
Author-email: vicente.ramos@ucdenver.edu
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/UCD-BDLab/BioNeuralNet/issues
Project-URL: Source, https://github.com/UCD-BDLab/BioNeuralNet
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Provides-Extra: cpu
Provides-Extra: cuda117
Provides-Extra: dev
License-File: LICENSE

# BioNeuralNet: A Graph-Based Multi-Omics Integration and Embedding Framework for Advanced analysis

![License](https://img.shields.io/badge/license-MIT-blue.svg)
![PyPI](https://img.shields.io/pypi/v/bioneuralnet)
![Python Versions](https://img.shields.io/pypi/pyversions/bioneuralnet)

## Table of Contents
- [Overview](#overview)
- [Framework Overview](#framework-overview)
- [Installation](#installation)
- [Documentation & Examples](#documentation--examples)
- [Acknowledgements](#acknowledgements)
- [Testing](#testing)
- [Contributing](#contributing)
- [License & Contact](#license--contact)

---

## Overview

**BioNeuralNet** is a Python-based framework designed to integrate and analyze multi-omics data through advanced neural network embeddings. It streamlines complex workflows, enabling researchers to transform high-dimensional biological data into meaningful insights for biomarker discovery and precision medicine.

---

## Framework Overview

![BioNeuralNet Workflow](assets/bioneuralnet1.png)

BioNeuralNet encompasses five core components:

1. **Graph Construction**: Build multi-omics networks using WGCNA, SmCCNet, or import existing networks.  
2. **Graph Clustering**: Apply hierarchical, PageRank, or Louvain clustering to identify functional modules.  
3. **Graph Embedding**: Generate embeddings with Graph Neural Networks (GNNs) or Node2Vec.  
4. **Subject Representation**: Integrate embeddings into omics data for enhanced subject-level features.  
5. **Disease Prediction (DPMON)**: Utilize embeddings in predictive models for accurate disease classification.

**Note:** BioNeuralNet also supports static and dynamic network visualizations for intuitive exploration of network structures and results.

---

## Installation

### Clone the Repository
Follow these steps to set up BioNeuralNet:

```bash
git clone https://github.com/UCD-BDLab/BioNeuralNet.git
cd BioNeuralNet
```

### Fast Install Script
Run the installation script for guided setup (CPU or CUDA-enabled):
```bash
cd scripts
python3 fast-install.py
```

### Alternative Pip Installation
Install directly using pip:
```bash
pip install bioneuralnet
```

### Optional R Dependencies
For graph construction using WGCNA or SmCCNet:
```r
install.packages(c("dplyr", "SmCCNet", "WGCNA"))
```

---

## Documentation & Examples

Comprehensive documentation, tutorials, and example workflows are available in the [`docs/`](./docs/) directory. To build and view the documentation locally:

```bash
cd docs
sphinx-build -b html source/ build/html
open build/html/index.html  
```

**Whatâ€™s included:**
- Detailed pipeline overviews  
- Step-by-step tutorials  
- API references  
- End-to-end workflow examples  

Explore example scripts in the `examples/` directory.

---

## Acknowledgements

BioNeuralNet leverages several open-source libraries and tools:  

- [SmCCNet on CRAN](https://cran.r-project.org/package=SmCCNet)  
- [WGCNA on CRAN](https://cran.r-project.org/package=WGCNA)  
- [Node2Vec on GitHub](https://github.com/aditya-grover/node2vec)  
- [PyTorch](https://pytorch.org/)  
- [PyTorch Geometric](https://github.com/pyg-team/pytorch_geometric)  
- [dplyr on CRAN](https://cran.r-project.org/package=dplyr)  
- [Pytest](https://pytest.org/)  
- [Pre-commit](https://github.com/pre-commit/pre-commit)  

We extend our gratitude to all contributors and open-source communities that made BioNeuralNet possible.

---

## Testing

BioNeuralNet ensures reliability through automated tests and CI workflows.  

### Running Tests Locally  

1. **Install Development Dependencies**  
   ```bash
   pip install -r requirements-dev.txt
   ```

2. **Run All Tests**  
   ```bash
   pytest
   ```

3. **View Coverage Reports**  
   ```bash
   pytest --cov=bioneuralnet --cov-report=html tests/
   open htmlcov/index.html
   ```

### Continuous Integration  
GitHub Actions ensure all commits and pull requests:  
- Install dependencies  
- Run the test suite  
- Enforce code quality and generate coverage reports  

---

## Contributing

We welcome contributions! To contribute:  

1. **Fork the Repository**  
   ```bash
   git clone https://github.com/UCD-BDLab/BioNeuralNet.git
   cd BioNeuralNet
   ```

2. **Create a Feature Branch**  
   ```bash
   git checkout -b feature/your-feature-name
   ```

3. **Install Development Dependencies**  
   ```bash
   ./setup.sh
   ```

4. **Make Your Changes**  
   - Follow PEP 8 standards.  
   - Add or update tests.  
   - Update relevant documentation.  

5. **Run Tests**  
   ```bash
   pytest
   ```

6. **Commit Changes**  
   ```bash
   git add .
   git commit -m "Add feature XYZ"
   ```

7. **Push and Open a Pull Request**  
   ```bash
   git push origin feature/your-feature-name
   ```

---

## License & Contact

- **License**: [MIT License](LICENSE)  
- **Contact**:  
  For questions, issues, or feature requests, please open an issue on the [GitHub repository](https://github.com/UCD-BDLab/BioNeuralNet/issues) or contact the maintainer at **vicente.ramos@ucdenver.edu**.

---

For an in-depth look at BioNeuralNet, refer to the [Documentation](./docs/) and example workflows in the `examples/` directory.


